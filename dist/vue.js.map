{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["let oldArrayPrototype = Array.prototype;\r\n// arrayProptotype.__proto__ = Array.prototype;\r\n\r\nlet arrayPrototype = Object.create(oldArrayPrototype);\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n// 重写数组 7 方法 （目的就是对新增的数据再次进行观测 避免里面出现没有监听到的对象数据）\r\n// 如 arr[1000] = 1234 更改数组会响应式是通过 $set 实现的\r\nmethods.forEach(method => { // 用户调用push方法会先经历我自己重写的方法,之后调用数组原来的方法\r\n    arrayPrototype[method] = function(...args) {\r\n        console.log('数组修改了')\r\n\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args; // 数组\r\n                break;\r\n            case 'splice': // arr.splice(1,1,xxx)\r\n                inserted = args.slice(2); // 接去掉前两个参数\r\n            default:\r\n                break\r\n        }\r\n        if (inserted) {\r\n            // 对新增的数据再次进行观测\r\n            ob.observeArray(inserted)\r\n        }\r\n        return oldArrayPrototype[method].call(this, ...args)\r\n    }\r\n})\r\nexport default arrayPrototype\r\n\r\n","import arrayPrototype from \"./array\";\r\n\r\nclass Observer{\r\n    constructor(data){\r\n        // 如果是数组的话也是用defineProperty会浪费很多性能 很少用户会通过arr[878] = 123\r\n        // vue3中的polyfill 直接就给数组做代理了\r\n         // 改写数组的方法，如果用户调用了可以改写数组方法的api 那么我就去劫持这个方法\r\n        // 变异方法 push pop shift unshift reverse sort splice \r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false\r\n        })\r\n         // 如果有__ob__属性 说明被观测过了\r\n        // 修改数组的索引和长度是无法更新视图的\r\n        if(Array.isArray(data)){\r\n            // 需要重写这7个方法\r\n            data.__proto__ = arrayPrototype; \r\n            // 直接将属性赋值给这个对象\r\n            // 如果数组里面放的是对象类型 我期望他也会被变成响应式的\r\n            this.observeArray(data);\r\n        }else{\r\n            this.walk(data)\r\n        }\r\n    }\r\n    observeArray(data){\r\n        data.forEach(item=> observe(item)); //如果是对象我才进行观测了  \r\n    }\r\n    walk(data){ // 循环对象 尽量不用for in （会遍历原型链）\r\n        let keys = Object.keys(data); // [0,1,2]\r\n        keys.forEach(key=> { //没有重写数组里的每一项\r\n            defineReactive(data,key,data[key])\r\n        })\r\n    }\r\n}\r\n// 性能不好的原因在于 所有的属性都被重新定义了一遍\r\n// 一上来需要将对象深度代理 性能差\r\nfunction defineReactive(data,key,value){ //  闭包\r\n    // 属性会全部被重写增加了get和set\r\n    observe(value); // 递归代理属性\r\n    Object.defineProperty(data,key,{\r\n        get(){ // vm.xxx\r\n            return value;\r\n        },\r\n        set(newValue){ // vm.xxx = {a:1} 赋值一个对象的话 也可以实现响应式数据\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    if(typeof data !== 'object' || data == null){\r\n        return ; // 如果不是对象类型，那么不要做任何处理\r\n    }\r\n    if(data.__ob__){\r\n        // 说明这个属性已经被代理过了\r\n        return data\r\n    }\r\n\r\n    // 我稍后要区分 如果一个对象已经被观测了，就不要再次被观测了\r\n    // __ob__ 标识是否有被观测过\r\n\r\n    return new Observer(data)\r\n};\r\n\r\n\r\n// 每个类头有一个prototype 指向了一个公共的空间\r\n// 每个实例可以通过__proto__ 找到所属类的prototype对应的内容\r\n\r\n\r\n\r\n// 1.在Vue2中对象的响应式原理，就是给每个属性增加get和set，而且是递归操作 （用户在写代码的时候尽量不要把所有的属性都放在data中，层次尽可能不要太深）, 赋值一个新对象也会被变成响应式的\r\n// 2.数组没有使用defineProperty 采用的是函数劫持创造一个新的原型重写了这个原型的7个方法，用户在调用的时候采用的是这7个方法。我们增加了逻辑如果是新增的数据会再次被劫持 。 最终调用数组的原有方法 （注意数字的索引和长度没有被监控）  数组中对象类型会被进行响应式处理","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n    const options = vm.$options\r\n\r\n    // 后续实现计算属性 、 watcher 、 props 、methods\r\n    if (options.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key]\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // 如果是函数就拿到函数的返回值 否则就直接采用data作为数据源\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n    // 属性劫持 采用defineProperty将所有的属性进行劫持\r\n\r\n    // 我期望用户可以直接通过 vm.xxx 获取值， 也可以这样取值 vm._data.xxx\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n    observe(data)\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 用来描述标签的\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的  捕获的是结束标签的标签名\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的  分组1 拿到的是属性名  , 分组3 ，4， 5 拿到的是key对应的值\r\n\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的    />    >   \r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 匹配双花括号中间单的内容\r\n\r\nfunction parserHTML(html) {\r\n  function advance(n) {\r\n    html = html.substring(n) // 每次根据传入的长度截取html\r\n    console.log(\"html 剩下\", html)\r\n  }\r\n\r\n  // 树的操作 ，需要根据开始标签和结束标签产生一个树\r\n  let root\r\n  // 如何创建树的父子关系\r\n  let stack = []\r\n\r\n  function createASTElement(tagName, attrs) {\r\n    return {\r\n      tag: tagName,\r\n      attrs,\r\n      children: [],\r\n      parent: null,\r\n      type: 1\r\n    }\r\n  }\r\n\r\n  // 开始标签进栈 （先进后出原理）\r\n  function start(tagName, attrs) {\r\n    let element = createASTElement(tagName, attrs)\r\n    if (root == null) {\r\n      root = element\r\n    }\r\n    let parent = stack[stack.length - 1] // 取到栈中的最后一个\r\n    if (parent) {\r\n      element.parent = parent       // 让这个元素记住自己的父亲是谁\r\n      parent.children.push(element) // 让父亲记住儿子是谁\r\n    }\r\n    stack.push(element) //入栈\r\n  }\r\n\r\n  // 结束标签出栈\r\n  function end(tagName) {\r\n    stack.pop() //出栈\r\n  }\r\n\r\n  // 处理标签内容\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, '')\r\n    if (text) {\r\n      let parent = stack[stack.length - 1]\r\n      parent.children.push({ // 增加一个子元素\r\n        type: 3, // 类型 3 表示文本\r\n        text\r\n      })\r\n    }\r\n  }\r\n\r\n  //  ast 描述的是语法本身 ，语法中没有的，不会被描述出来  虚拟dom 是描述真实dom的可以自己增添属性\r\n  while (html) {\r\n    // 1. 处理开始标签 （就是处理 <div id=\"app\">{{name}}</div>  的 <div id=\"app\"> 部分）\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd === 0) {\r\n      const startTagMatch = parseStartTag(); // 解析开始标签  {tagName:'div',attrs:[{name:\"id\",value:\"app\"}]}\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n\r\n      // 3. 处理结束标签 （就是处理 <div id=\"app\">{{name}}</div>  的 </div> 部分）\r\n      let matches\r\n      if (matches = html.match(endTag)) {\r\n        end(matches[1])\r\n        advance(matches[0].length)\r\n        continue\r\n      }\r\n    }\r\n\r\n    // 2. 处理标签内容 （就是处理 <div id=\"app\">{{name}}</div> 的 {{name}} 部分）\r\n    let text\r\n    if (textEnd >= 0) {\r\n      text = html.substring(0, textEnd)\r\n    }\r\n    if (text) {\r\n      advance(text.length) // html 删去 text， 处理一点删一点\r\n      chars(text)\r\n    }\r\n  }\r\n\r\n\r\n  function parseStartTag() {\r\n    const matches = html.match(startTagOpen) // 获取标签头 <div id=\"app\">{{name}}</div> 的 <div 部分\r\n    if (matches) {\r\n      const match = {\r\n        tagName: matches[1],\r\n        attrs: []\r\n      }\r\n      advance(matches[0].length) // 删除html前面匹配到的标签名字符串\r\n      let end, attr\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        // while循环取属性 直到取完\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n        advance(attr[0].length) // 取到一个属性删除一个\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n        return match\r\n      }\r\n    }\r\n  }\r\n\r\n  return root\r\n}\r\n\r\n// 参数拼接成对象\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if (attr.name === 'style') {\r\n      let obj = {}\r\n      attr.value.split(';').reduce((memo, current) => {\r\n        let [key, value] = current.split(':')\r\n        memo[key] = value\r\n        return memo\r\n      }, obj)\r\n      attr.value = obj // 这里是样式对象 例：{color:red,background:blue}\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0,-1)}}` // 删除最后的 ,\r\n}\r\n\r\nfunction gen(node) {\r\n  if (node.type === 1) {  // 是节点\r\n    return genCode(node)\r\n  } else {\r\n    let text = node.text\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})` // 不带表达式的\r\n    } else {\r\n      let tokens = []\r\n      let match\r\n      // exec 遇到全局匹配会有 lastIndex 问题 每次匹配前需要将lastIndex 置为 0\r\n      let startIndex = defaultTagRE.lastIndex = 0\r\n      while (match = defaultTagRE.exec(text)) {\r\n        let endIndex = match.index // 匹配到索引\r\n        if (endIndex > startIndex) {\r\n          tokens.push(JSON.stringify(text.slice(startIndex, endIndex)))\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        startIndex = endIndex + match[0].length\r\n      }\r\n      if (startIndex < text.length) { // 最后的尾巴放进去\r\n        tokens.push(JSON.stringify(text.slice(startIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})` // 最后将动态数据 和非动态的拼接在一起\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(ast) {\r\n  const children = ast.children\r\n  return children.map(child => gen(child)).join(',') // 孩子 , 拼接\r\n}\r\n\r\nfunction genCode(ast) {\r\n  let code\r\n  code = `_c(\"${ast.tag}\", ${\r\n    ast.attrs.length ? genProps(ast.attrs) : 'undefined'\r\n  }${\r\n    ast.children ? (',' + genChildren(ast)) : '' // 后面的参数都是孩子\r\n  })`\r\n\r\n  return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n  let ast = parserHTML(template)\r\n  console.log(\"ast =\", ast)\r\n\r\n  let code = genCode(ast);\r\n  console.log(\"code =\", code)\r\n\r\n  const render = new Function(`with(this){return ${code}}`); // 将字符串变成了函数\r\n  return render\r\n}","export function createElement(vm, tag, data = {}, ...children) {\n    return vnode(vm,tag,data,children,data.key,null)\n}\n\nexport function createTextNode(vm,text) {\n    return vnode(vm,null,null,null,null,text)\n}\n\nfunction vnode(vm,tag,data,children,key,text){\n    return {\n        vm,\n        tag,\n        data,\n        children,\n        key,\n        text\n        // ...\n    }\n}","export function patch(oldVnode,vnode){     // oldVnode 可能是后续做虚拟节点的时候 是两个虚拟节点的比较\r\n  const isRealElement = oldVnode.nodeType\r\n  if(isRealElement){ // 如果有 说明他是一个 dom 元素\r\n    const oldElm = oldVnode\r\n    // 需要获取父节点 将当前节点的下一个元素作为参照物 将他插入，之后删除老节点\r\n    const parentNode = oldElm.parentNode\r\n    let el = createElm(vnode); // 根据虚拟节点\r\n    parentNode.insertBefore(el,oldElm.nextSibling) // nextSibling: 父节点的 childNodes 列表中紧跟在其后面的节点\r\n    parentNode.removeChild(oldElm)\r\n    return el\r\n  }\r\n  // diff算法\r\n}\r\n\r\n\r\nfunction createElm(vnode) {\r\n  let { tag, data, children, text } = vnode\r\n  if(typeof tag === 'string'){                // 元素\r\n    vnode.el = document.createElement(tag)    // 后续我们需要diff算法 拿虚拟节点比对后更新dom\r\n    children.forEach(child => {\r\n      vnode.el.appendChild(createElm(child))  // 递归渲染\r\n    })\r\n  }else{ // 文本\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n  return vnode.el\r\n}","import { createElement, createTextNode } from \"./vdom/index\"\r\nimport { patch } from \"./vdom/patch\"\r\n\r\n// 创造对应的虚拟节点 进行渲染\r\nexport function lifeCycleMixin(Vue) {\r\n  Vue.prototype._c = function() { // 生成 vnode\r\n    return createElement(this, ...arguments)\r\n  }\r\n  Vue.prototype._v = function() {\r\n    return createTextNode(this, ...arguments)\r\n  }\r\n  Vue.prototype._s = function(value) { // 将数据转化成字符串 因为使用的变量对应的结果可能是一个对象\r\n    if(typeof value === 'object' && value !== null){\r\n      return JSON.stringify(value)\r\n    }\r\n    return value\r\n  }\r\n  Vue.prototype._render = function() {\r\n    const vm = this;\r\n    const render = vm.$options.render;\r\n    let vnode = render.call(vm); // _c( _s _v)  with(this)\r\n    console.log(\"vnode =\", vnode)\r\n    return vnode;\r\n  }\r\n  Vue.prototype._update = function(vnode) { // 将虚拟节点变成真实节点\r\n    // 将 vnode 渲染el元素中\r\n    const vm = this;\r\n    vm.$el = patch(vm.$el,vnode); // 可以初始化渲染， 后续更新也走这个patch方法\r\n  }\r\n}\r\n\r\n\r\nexport function mountComponent(vm, el) {\r\n  // 实现页面的挂载流程\r\n  vm.$el = el;// 先将 el 挂载到实例上\r\n  const updateComponent = () => {\r\n    // 需要调用生成的render函数 获取到虚拟节点  -> 生成真实的dom\r\n    vm._update(vm._render());\r\n  }\r\n  updateComponent(); // 如果稍后数据变化 也调用这个函数重新执行 \r\n  //后续：观察者模式 + 依赖收集 + diff算法\r\n}","import { initState } from \"./state\";\r\nimport { compileToFunction } from \"./compiler/index\";\r\nimport { mountComponent } from \"./lifecycle\";\r\n\r\nexport default function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this;\r\n        vm.$options = options // 所有后续的扩展方法都有一个$options选项可以获取用户的所有选项\r\n        // 对于实例的数据源 props data methods computed watch\r\n        // props data\r\n        initState(vm);\r\n        // vue中会判断如果是$开头的属性不会被变成响应式数据\r\n\r\n\r\n\r\n        // 状态初始化完毕后需要进行页面挂载\r\n        if (vm.$options.el) { // el 属性 和直接调用$mount是一样的\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        const options = vm.$options;\r\n        if (!options.render) {\r\n            let template = options.template;\r\n            if (!template) { // render 和 template 都没有的情况下才获取 outerHTML\r\n                template = el.outerHTML\r\n            }\r\n            // 将template变成render函数\r\n\r\n            // 创建render函数 -》 虚拟dom  -》 渲染真实dom\r\n            console.log(\"html 初始值\", template)\r\n            const render =  compileToFunction(template); // 开始编译\r\n            options.render = render;\r\n        }\r\n        mountComponent(vm,el)\r\n        console.log(\"render =\", options.render.toString())\r\n    }\r\n}","// 整个自己编写的Vue的入口\r\n\r\nimport initMixin from \"./init\"\r\nimport { lifeCycleMixin } from \"./lifecycle\"\r\n\r\n// es6的类 要求所有的扩展都在类的内部来进行扩展\r\n\r\nfunction Vue(options){\r\n    this._init(options);\r\n}\r\ninitMixin(Vue)      // 后续在扩展都可以采用这种方式\r\nlifeCycleMixin(Vue) // 给 Vue 实例添加方法\r\n\r\n// 给Vue添加原型方法我们通过文件的方式来添加，防止所有的功能都在一个文件中来处理\r\nexport default Vue"],"names":["oldArrayPrototype","Array","prototype","arrayPrototype","Object","create","methods","forEach","method","console","log","inserted","ob","__ob__","args","slice","observeArray","call","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newValue","initState","vm","options","$options","initData","proxy","source","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parserHTML","html","advance","n","substring","root","stack","createASTElement","tagName","attrs","tag","children","parent","type","start","element","length","push","end","pop","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","matches","match","attr","name","genProps","str","i","obj","split","reduce","memo","current","JSON","stringify","gen","node","genCode","test","tokens","startIndex","lastIndex","exec","endIndex","index","trim","join","genChildren","ast","map","child","code","compileToFunction","template","render","Function","createElement","vnode","createTextNode","patch","oldVnode","isRealElement","nodeType","oldElm","parentNode","el","createElm","insertBefore","nextSibling","removeChild","document","appendChild","lifeCycleMixin","Vue","_c","arguments","_v","_s","_render","_update","$el","mountComponent","updateComponent","initMixin","_init","$mount","querySelector","outerHTML","toString"],"mappings":"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"}