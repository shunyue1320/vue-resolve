{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/dep.js","../src/observer/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/generator.js","../src/compiler/index.js","../src/observer/scheduler.js","../src/observer/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/vdom/create-element.js","../src/render.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["// vue的工具方法\r\n\r\nexport function isObject(obj) {\r\n  return typeof obj === 'object' && obj !== null\r\n}\r\n\r\nconst LIFECYCLE_HOOKS = [\r\n  'beforeCreate',\r\n  'created',\r\n  'beforeMount',\r\n  'mounted',\r\n  'beforeUpdate',\r\n  'updated'\r\n]\r\n\r\nlet strats = {}\r\n/*** 钩子拼接 将同名钩子函数拼接成数组 ***/\r\nfunction mergeHook(parentVal, childVal) {\r\n  if (childVal) {     //子级有\r\n    if (parentVal) {  //父级有\r\n      return parentVal.concat(childVal) //同名生命周期数组\r\n    } else {\r\n      return [ childVal ]\r\n    }\r\n  } else {            //子级没有\r\n    return parentVal\r\n  }\r\n}\r\n\r\nLIFECYCLE_HOOKS.forEach(hook => {\r\n  strats[hook] = mergeHook\r\n})\r\n\r\n/*** 选项拼接 ***/\r\nexport function mergeOptions (parent, child) {\r\n  const options = {}  //合并存储容器\r\n\r\n  //父选项\r\n  for (let key in parent) {\r\n    mergeField(key)\r\n  }\r\n\r\n  //新增选项\r\n  for (let key in child) {\r\n    if (!parent.hasOwnProperty(key)) {\r\n      mergeField(key)\r\n    }\r\n  }\r\n\r\n  /*** 判断各选项类型 执行对应的合并逻辑 ***/\r\n  function mergeField (key) {\r\n    if (strats[key]) { //是钩子\r\n      options[key] = strats[key](parent[key], child[key])\r\n    } else if (isObject(parent[key]) && isObject(child[key])) { //是对象\r\n      options[key] = Object.assign(parent[key], child[key])\r\n    } else {           //是方法\r\n      if (child[key] == null) {\r\n        options[key] = parent[key];\r\n      } else {\r\n        options[key] = child[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return options\r\n}","//获取数组原型上的方法\r\nconst arrayProto = Array.prototype;\r\n//克隆一个原型方法\r\nexport const arrayMethods = Object.create(arrayProto);\r\n\r\n//7个改变数组的方法\r\nconst methods = [ 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse', 'splice' ]\r\n\r\n//封装7个改变数组的方法 原因：当改变数组数据时需要视图更新\r\nmethods.forEach(method => {\r\n  //在vue内执行改变数组的方法 其实就是执行以下的方法\r\n  arrayMethods[method] = function (...args) {\r\n    const ob = this.__ob__\r\n    const result = arrayProto[method].apply(this, args)\r\n\r\n    //给增加的新数据进行响应式\r\n    let inserted\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n      default:\r\n        break;\r\n    }\r\n    inserted && ob.observeArray(inserted)\r\n\r\n    // ob.dep.notify() //视图更新\r\n    \r\n    return result\r\n  }\r\n})","let id = 0\r\n\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++\r\n    this.subs = []\r\n  }\r\n\r\n  depend() {\r\n    // 1. 让dep 记住watcher\r\n    // 2. 让watcher 记住dep 双向记忆\r\n    Dep.target.addDep(this) //让wacher 存储 dep\r\n  }\r\n  addSub(watcher) {\r\n    this.subs.push(watcher)\r\n  }\r\n  notify() {\r\n    this.subs.forEach(watcher => watcher.update())\r\n  }\r\n}\r\n\r\nDep.target = null //默认为null\r\nconst stack = []  //先进后出\r\nexport function pushTarget(watcher) { //栈添加\r\n  Dep.target = watcher\r\n  //  stack.push(watcher) // []\r\n}\r\nexport function popTarget() {         //栈删除\r\n  Dep.target = null\r\n  //   stack.pop();\r\n  //   Dep.target = stack[stack.length-1];\r\n}\r\n\r\nexport default Dep\r\n// 双向记忆原理\r\n// dep 和 watcher 是一个多对多的关系\r\n// 每个组件一个diff的逻辑 也就是每个组件一个watcher 也就是组件页面内多个响应式属性指向一个watcher\r\n// 每个属性对应一个dep 而dep内存储多个watcher 也就是该dep出现在多个watcher内 说明该属性存在多个组件页面内响应式显示","import { isObject } from \"../utils\";\r\nimport { arrayMethods } from './array'\r\nimport Dep from './dep.js';\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    //__ob__ 一个响应式标记 作用：将当前this'继承'给需响应的对象或数组\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,         //指向this\r\n      enumerable: false,   //不可枚举\r\n      configurable: false\r\n    })\r\n\r\n    //判断数组响应式\r\n    if (Array.isArray(data)) {\r\n      data.__proto__ = arrayMethods //替换封装的原型方法\r\n      this.observeArray(DataCue)\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n\r\n  observeArray(data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      observe(data[i])\r\n    }\r\n  }\r\n\r\n  walk(data) {\r\n    Object.keys(data).forEach(key => {\r\n      this.defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n\r\n  defineReactive(data, key, value) {\r\n    observe(value) //递归 所有数据响应式\r\n    let dep = new Dep //每个属性一个\r\n    Object.defineProperty(data, key, {\r\n      get() {\r\n        if (Dep.target) { //将Dep.target赋值后再调用get方法就可以给该属性添加一个wacher\r\n          dep.depend()    //添加watcher\r\n        }\r\n\r\n        return value\r\n      },\r\n      set(newValue) {\r\n        if (newValue === value) return\r\n        observe(newValue) //给新数据响应式\r\n        value = newValue\r\n\r\n        //视图更新\r\n        dep.notify()\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function observe(data) {\r\n  //不是对象或=null不监控\r\n  if (!isObject(data)) {\r\n    return\r\n  }\r\n\r\n  //对象已监控 则跳出\r\n  if (data.__ob__ instanceof Observer) {\r\n    return\r\n  }\r\n\r\n  return new Observer(data)\r\n}","import { observe } from './observer/index.js'\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n\r\n  //props属性\r\n  if (opts.props) {\r\n    initProps(vm)\r\n  }\r\n\r\n  //data数据\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n\r\n  // computed ... watch\r\n\r\n  //methods方法\r\n  if (opts.methods) {\r\n    initMethod(vm)\r\n  }\r\n}\r\n\r\nfunction initProps() {}\r\nfunction initMethod() {}\r\nfunction proxy(vm, property, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[property][key]\r\n    },\r\n    set(newValue) {\r\n      vm[property][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n  for (const key in data) {\r\n    proxy(vm, '_data', key) //数据代理至vm\r\n  }\r\n  observe(data)             //数据响应式\r\n}","// 字母a-zA-Z_ - . 数组小写字母 大写字母  \r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;          // 标签名\r\n// ?:匹配不捕获   <aaa:aaa>\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// startTagOpen 可以匹配到开始标签 正则捕获到的内容是 (标签名)\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);    // 标签开头的正则 捕获的内容是标签名\r\n// 闭合标签 </xxx>  \r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\n// <div aa=\"123\" bb=123  cc='123'\r\n// 捕获到的是 属性名 和 属性值 arguments[1] || arguments[2] || arguments[2]\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n// <div > | <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/;                      // 匹配标签结束的 >\r\n// 匹配动态变量的  +? 尽可能少匹配\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nexport function parseHTML(html) {\r\n  let root           //存储编译出来的ast树\r\n  let currentParent  //存储当前编译标签的父级标签\r\n  //借助栈型结构判断标签是否正常闭合<div>对应<div>\r\n  //执行过程中匹配到标签处理后push入stack 以此类推 例如：当push入一个</div>时上一个push的肯定是<div>如果不是则报错，如果是则将他们出栈 等待校验下一个push的标签\r\n  let stack = []\r\n\r\n  //结构树结构 html = <div id='app'><span>{{name}}</span></div>\r\n  while (html) {\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd == 0) {\r\n      const startTageMatch = parseStartTag() // { tagName: 'div', attrs: [] }\r\n      //开始标签\r\n      if (startTageMatch) {\r\n        start(startTageMatch.tagName, startTageMatch.attrs)\r\n      }\r\n      //结束标签\r\n      const endTagMatch = html.match(endTag) //[ \"</div>\", \"div\", index: 0 ]\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1])\r\n        advance(endTagMatch[0].length)\r\n      }\r\n    }\r\n\r\n    //如果不是0 说明是文本\r\n    let text\r\n    if (textEnd > 0) {\r\n      text = html.substring(0, textEnd) //截取标签前面的文本\r\n      chars(text)\r\n    }\r\n    if (text) {\r\n      advance(text.length)      //编译推进\r\n    }\r\n  }\r\n\r\n  //匹配该标签内的所有属性 return { tagName: 'div', attrs: [] }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen) // [\"<div\", \"div\", index: 0, ...]\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []    //属性\r\n      }\r\n      advance(start[0].length)  //编译推进 html => id='app'><span>{{name}}</span></div>\r\n      \r\n      let end, attr  // !匹配开头是> && 匹配属性  意思：匹配该标签内的所有属性\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        //attr => [ 0: \"id='app'\", 1: \"id\", 2: \"=\", 3: undefined, 4: \"app\", 5: undefined ]\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n        advance(attr[0].length) //编译推进\r\n      }\r\n      if (end) {\r\n        advance(end[0].length) //编译推进\r\n        return match\r\n      }\r\n    }\r\n  }\r\n\r\n  //开始标签 每次解析开始标签 都会执行此方法\r\n  function start(tagName, attrs) {\r\n    let element = createASTElement(tagName, attrs)\r\n    if (!root) {\r\n      root = element //只有第一次是根\r\n    }\r\n    currentParent = element\r\n    stack.push(element)\r\n  }\r\n\r\n  function end(tagName) {\r\n    let element = stack.pop()\r\n    currentParent = stack[stack.length - 1]\r\n    if (currentParent) {\r\n      element.parent = currentParent\r\n      currentParent.children.push(element)\r\n    }\r\n  }\r\n\r\n  //处理文本\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, '')\r\n    if (text) {\r\n      //加入currentParent的子元素内\r\n      currentParent.children.push({\r\n        type: 3,\r\n        text\r\n      })\r\n    }\r\n  }\r\n\r\n  //编译推进 将已编译完成的字符串去除\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n\r\n\r\n  // 常见数据结构 栈 队列 数组 链表 集合 hash表 树\r\n  function createASTElement(tagName, attrs) {\r\n    return {\r\n      tag: tagName,\r\n      attrs,\r\n      children: [],\r\n      parent: null,\r\n      type: 1        //1:元素  3:文本\r\n    }\r\n  }\r\n\r\n  return root\r\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\n\r\n//作用： 'helloworld{{ msg}}aa{{bb}}aaa'  => _v('helloworld'+_s(msg)+\"aa\" + _s(bb))\r\nfunction gen(node) {\r\n  if (node.type === 1) {            //节点里面有children 继续遍历\r\n    return generate(node)\r\n  } else {                          //文本则处理\r\n    let text = node.text\r\n\r\n    if (!defaultTagRE.test(text)) { //没有有变量 {{}}\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {                        //存在变量\r\n      let tokens = []\r\n      let match, index\r\n      let lastIndex = defaultTagRE.lastIndex = 0\r\n      while (match = defaultTagRE.exec(text)) { //匹配出所有变量\r\n        index = match.index\r\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        tokens.push(`_s(${match[1].trim()})`)   //获取变量名\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(el) {\r\n  const children = el.children\r\n  if (children) {\r\n    return children.map(c => gen(c)).join(',')\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\n//作用：[ {name:'id', value: 'divid'}, {name: 'style', value: 'color: aqua;font-size: 30px;'} ] \r\n//  => {id:'divid', style:{color: 'aqua', font-size: '30px'}}\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    const attr = attrs[i];\r\n    if (attr.name === 'style') {\r\n      let obj = {}\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value\r\n      });\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nexport function generate(el) {\r\n  let children = genChildren(el)\r\n  let attrs = el.attrs.length ? genProps(el.attrs) : undefined\r\n  let code = `_c(\"${el.tag}\", ${attrs} ${children ? `,${children}` : ''})`\r\n\r\n  return code\r\n}","import { parseHTML } from './parser.js'\r\nimport { generate } from './generator.js'\r\n\r\nexport function compileToFunctions(template) {\r\n  //1. 将outerHTML 转换成 ast树\r\n  let ast = parseHTML(template) // { tag: 'div', attrs, parent, type, children: [...] }\r\n  // console.log(\"AST:\", ast)\r\n\r\n  //2. ast树 => 拼接字符串\r\n  let code = generate(ast) //return _c('div',{id:app,style:{color:red}}, ...children)\r\n  code = `with(this){ \\r\\n return ${code} \\r\\n }`\r\n  // console.log(\"code:\", code)\r\n  \r\n  //3. 字符串 => 可执行方法\r\n  let render = new Function(code)\r\n  /**如下：\r\n  * render(){ \r\n  *   with(this){\r\n  *     return _c('div',{id:app,style:{color:red}},_c('span',undefined,_v(\"helloworld\"+_s(msg)) ))\r\n  *   }\r\n  * }\r\n  * \r\n  */\r\n\r\n  return render\r\n  /**\r\n   * 编译原理的3个步骤：\r\n   * 1. outerHTML    => ast树\r\n   * 2. ast树        => render字符串\r\n   * 3. render字符串 => render方法\r\n   */\r\n}","let has = {}; // vue源码里有的时候去重用的是set 有的时候用的是对象来实现的去重\r\nlet queue = [];\r\n\r\n// 这个队列是否正在等待更新\r\nfunction flushSchedulerQueue() {\r\n  for (let i = 0; i < queue.length; i++) {\r\n    queue[i].run() // 执行 watcher 内部的 updateComponent 方法 更新页面\r\n  }\r\n  queue = []\r\n  has = {}\r\n}\r\n\r\n//由于多个元素指向同一个 watcher 所以更新的时候需要把这些 watcher 集中起来 去重后一起执行\r\n//原因：如果每匹配一个元素就执行一个 watcher 这样重复执行了许多相同的 watcher 性能大大下降\r\nexport function queueWatcher(watcher) {\r\n  const id = watcher.id;\r\n\r\n  if (has[id] == null) {\r\n    has[id] = true // 如果没有注册过这个watcher，就注册这个watcher到队列中，并且标记为已经注册\r\n    queue.push(watcher)  // watcher 存储了updateComponent方法 用来更新页面\r\n    console.log(\"queuequeue---\", queue);\r\n    nextTick(flushSchedulerQueue); // flushSchedulerQueue 调用渲染watcher\r\n  }\r\n}\r\n\r\n// 1. callbacks[0] 是flushSchedulerQueue函数 当监听组件data数据改变时会执行dep.notify()方法\r\n// 2. dep.notify()方法将所有触发的 watcher 传递给 queueWatcher 方法\r\n// 3. queueWatcher方法会对 watcher 进行去重 当所有组件data改变都监听完后 flushCallbacksQueue 开始工作\r\nlet callbacks = [];   // [flushSchedulerQueue,fn]\r\nlet pending = false\r\nfunction flushCallbacksQueue() {\r\n  callbacks.forEach(fn => fn())\r\n  pending = false\r\n}\r\n\r\n\r\n//上面22行第一次进入nextTick就开启了一个定时器 执行 nextTick 进来的回调函数\r\n//由于js定时器为宏观任务，定时器会等到所有微观任务都执行后才会执行定时器\r\n//所以当组件内的nextTick回调都一个个添加 callbacks 内且页面完全渲染后会触发 flushCallbacksQueue 方法\r\nexport function nextTick(fn) {\r\n  callbacks.push(fn)  // 防抖\r\n  if (!pending) {     // true  事件环的概念 promise mutationObserver setTimeout setImmediate\r\n    setTimeout(() => {\r\n      flushCallbacksQueue() //清除回调队列\r\n    }, 0)\r\n    pending = true\r\n  }\r\n}","import { pushTarget, popTarget } from \"./dep\";\r\nimport { queueWatcher } from \"./scheduler\";\r\n\r\nlet id = 0; // 做一个watcher 的id 每次创建watcher时 都有一个序号\r\n\r\nclass Watcher {\r\n  constructor(vm, expoOrFn, cb, options) {\r\n    this.vm = vm\r\n    this.expoOrFn = expoOrFn\r\n    this.cb = cb\r\n    this.options = options\r\n    this.deps = []  //这个watcher会存放所有的dep\r\n    this.depsId = new Set()\r\n    if (typeof expoOrFn == 'function') {\r\n      this.getter = expoOrFn\r\n    }\r\n\r\n    this.id = id++\r\n    this.get()\r\n  }\r\n\r\n  run() {\r\n    this.get() //重新渲染\r\n  }\r\n\r\n  get() {\r\n    // 1.是先把渲染watcher 放到了 Dep.target上\r\n    // 2.this.getter()  是不是去页面取值渲染  就是调用defineProperty的取值操作\r\n    // 3.我就获取当前全局的Dep.target,每个属性都有一个dep 取值是就将Dep.target 保留到当前的dep中\r\n    // 4.数据变化 通知watcher 更新 \r\n    pushTarget(this); // 在取值之前 将watcher先保存起来\r\n    this.getter(); // 这句话就实现了视图的渲染  -> 操作是取值 \r\n    popTarget(); // 删掉watcher\r\n    // Vue是组件级别更新的\r\n  }\r\n\r\n  addDep(dep) {\r\n    let id = dep.id\r\n    if (!this.depsId.has(id)) {\r\n      this.depsId.add(id)   //存储有该watcher的所有dep.id\r\n      this.deps.push(dep)   //存储有该watcher的所有dep\r\n      dep.addSub(this)      //让当前dep 订阅这个watcher\r\n    }\r\n  }\r\n\r\n  //视图更新\r\n  update() {\r\n    queueWatcher(this); // 将watcher存储起来\r\n  }\r\n}\r\n\r\nexport default Watcher","//diff算法核心文件 vnode比较得出最终dom\r\n\r\n\r\nexport function patch(oldVnode, newVnode) {\r\n  const isRealElement = oldVnode.nodeType\r\n  // 真实元素\r\n  if (isRealElement) {\r\n    const oldElm = oldVnode\r\n    const parentElm = oldElm.parentNode //body\r\n    let el = createElm(newVnode);\r\n    parentElm.insertBefore(el, oldElm.nextSibling)\r\n    parentElm.removeChild(oldElm)\r\n    return newVnode\r\n  } else {\r\n    // dom diff 算法  同层比较 不需要跨级比较\r\n    // 两棵树 要先比较树根一不一样，再去比儿子长的是否一样\r\n\r\n    //1. 标签名不一致\r\n    if (oldVnode.tag !== newVnode.tag) {\r\n      oldVnode.el.parentNode.replaceChild(createElm(newVnode), oldVnode.el)\r\n    }\r\n\r\n    //2. 旧节点是文本节点 直接用新的文本替换掉老的文本\r\n    if (!oldVnode.tag) {\r\n      if (oldVnode.text !== newVnode.text) {\r\n        oldVnode.el.textContent = newVnode.text\r\n      }\r\n    }\r\n\r\n    // 一定是标签了 而且标签一致\r\n    // 需要复用老的节点 替换掉老的属性\r\n    let el = newVnode.el = oldVnode.el\r\n    // 更新属性  diff 属性\r\n    updateProperties(newVnode, oldVnode.data)  //属性更新\r\n\r\n    //对比children子元素\r\n    let oldChildren = oldVnode.children || []\r\n    let newChildren = newVnode.children || []\r\n    \r\n    /*** 下面3种核心比较 ***/\r\n    //1. 新老都有子节点  vnode比较    diff核心\r\n    //2. 老的有子节点   新的没子节点  直接删除\r\n    //3. 新的有子节点   老的没子节点  直接插入\r\n\r\n    if (oldChildren.length > 0 && newChildren.length > 0) {\r\n      updateChildren(el, oldChildren, newChildren)\r\n\r\n    } else if (oldChildren.length > 0) {\r\n      el.innerHTML = ''\r\n\r\n    } else if (newChildren.length > 0) {\r\n      for (let i = 0; i < newChildren.length; i++) {\r\n        let child = newChildren[i]\r\n        el.appendChild(createElm(child))\r\n      }\r\n    }\r\n\r\n    return newVnode\r\n  }\r\n}\r\n\r\n//判断两节点是否相同 (key + type 进行判断)\r\nfunction isSameVnode(oldVnode, newVnode) {\r\n  return (oldVnode.key == newVnode.key) && (oldVnode.tag === newVnode.tag)\r\n}\r\n\r\n\r\n//两子节点比对\r\nfunction updateChildren(parent, oldChildren, newChildren) {\r\n  let oldStartIndex = 0                       // 老的开始的索引\r\n  let oldStartVnode = oldChildren[0]          // 老的开始\r\n  let oldEndIndex = oldChildren.length - 1    // 老的尾部索引\r\n  let oldEndVnode = oldChildren[oldEndIndex]  // 获取老的孩子的最后一个\r\n\r\n  let newStartIndex = 0                       // 老的开始的索引\r\n  let newStartVnode = newChildren[0]          // 老的开始\r\n  let newEndIndex = newChildren.length - 1    // 老的尾部索引\r\n  let newEndVnode = newChildren[newEndIndex]  // 获取老的孩子的最后一个\r\n\r\n  function makeIndexByKey(children) {         // 只需要创建一次 映射表\r\n    let map = {}\r\n    children.forEach((item, index) => {\r\n      map[item.key] = index\r\n    })\r\n    return map\r\n  }\r\n\r\n  let map = makeIndexByKey(oldChildren)       // 根据老的孩子的key 创建一个映射表 \r\n\r\n  //对应vue源码 src\\core\\vdom\\patch.js  424行\r\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n    //1与2解决数组塌陷时设置节点为null的问题\r\n\r\n    //1. 旧开始节点是否存在 不存在下一个\r\n    if (!oldStartVnode) {\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n\r\n    //2. 旧结束节点是否存在 不存在前一个\r\n    } else if (!oldEndVnode) {\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n\r\n    //3. 新老 开始 节点是否相同 是递归patch比较子节点\r\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n      patch(oldStartVnode, newStartVnode)\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    \r\n    //4. 新老 结束 节点是否相同 是递归patch比较子节点\r\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n      patch(oldEndVnode, newEndVnode);\r\n      oldEndVnode = oldChildren[--oldEndIndex]; // 移动尾部指针\r\n      newEndVnode = newChildren[--newEndIndex];\r\n\r\n    //5. 老开始 新结束 节点是否相同 是递归patch比较子节点\r\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) { // 正序  和 倒叙  reverst sort\r\n      // 3方案3 头不一样 尾不一样  头移尾  倒序操作\r\n      patch(oldStartVnode, newEndVnode);\r\n      parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling); // 具备移动性\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newEndVnode = newChildren[--newEndIndex];\r\n\r\n    //6. 老结束 新开始 节点是否相同 是递归patch比较子节点\r\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) { // 老的尾 和新的头比对\r\n      patch(oldEndVnode, newStartVnode)\r\n      parent.insertBefore(oldEndVnode.el, oldStartVnode.el)\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    } else {\r\n      // 乱序比对  最终处理  map映射表起作用了 寻找key值对应的节点比对\r\n      let moveIndex = map[newStartVnode.key]\r\n      if (moveIndex == undefined) {    // 是一个新元素 在老节点之前插入新节点\r\n        parent.insertBefore(createElm(newStartVnode), oldStartVnode.el)\r\n      } else {                         // 此时说明两相同节点存在 但是位置不同\r\n        let moveVnode = oldChildren[moveIndex]\r\n        oldChildren[moveIndex] = undefined  // 占位 如果直接删除 可能会导致数组塌陷  [a,b,null,d]\r\n\r\n        // 比对当前这两个元素属性和儿子\r\n        patch(moveVnode, newStartVnode)\r\n        parent.insertBefore(moveVnode.el, oldStartVnode.el)\r\n      }\r\n      newStartVnode = newChildren[++newStartIndex] // 移动新的指针 因为乱序这里只移动新Vnode指针\r\n    }\r\n  }\r\n\r\n  //while之后\r\n  //新 vNode两指针中间还有元素说明中间还需插入节点\r\n  if (newStartIndex <= newEndIndex) {\r\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n      // appendChild   =  insertBefore null  js原生操作\r\n      let ele = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el\r\n      parent.insertBefore(createElm(newChildren[i]), ele)\r\n      // parent.appendChild(createElm(newChildren[i]))\r\n    }\r\n  }\r\n\r\n  //旧 vNode两指针中间还有元素说明是多余的需要删除的节点\r\n  if (oldStartIndex <= oldEndIndex) { // 说明新的已经循环完毕了 老的有剩余 剩余就是不要的\r\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      let child = oldChildren[i]\r\n      if (child != null) {\r\n        parent.removeChild(child.el)\r\n      }\r\n    }\r\n  }\r\n  // 没有key 就直接比较类型，如果类型一样就复用 （隐藏的问题是儿子可能都需要重新创建）\r\n  // 循环时尽量采用唯一的标识 作为key 如果用索引（例如倒叙 会采用索引来复用，不够准确）\r\n}\r\n\r\n\r\nexport function createElm(vnode) { // 需要递归创建\r\n  let { tag, children, data, key, text } = vnode;\r\n  if (typeof tag == 'string') {\r\n      // 元素 将虚拟节点和真实节点做一个映射关系 （后面diff时如果元素相同直接复用老元素 ）\r\n      vnode.el = document.createElement(tag);\r\n      updateProperties(vnode); // 跟新元素属性\r\n      children.forEach(child => {\r\n          // 递归渲染子节点 将子节点 渲染到父节点中\r\n          vnode.el.appendChild(createElm(child));\r\n      });\r\n  } else {\r\n      // 普通的文本\r\n      vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el\r\n}\r\n\r\nfunction updateProperties(vnode, oldProps = {}) {\r\n  // 需要比较 vnode.data 和 oldProps 的差异\r\n  let el = vnode.el\r\n  let newProps = vnode.data || {}\r\n  // 获取老的样式和新的样式的差异 如果新的上面丢失了属性 应该在老的元素上删除掉\r\n  let newStyle = newProps.style || {}\r\n  let oldStyle = oldProps.style || {}\r\n\r\n  for (let key in oldStyle) {\r\n    if (!newStyle[key]) {\r\n      el.style[key] = ''; // 删除之前的样式\r\n    }\r\n  }\r\n\r\n  for (let key in oldProps) {\r\n    if (!newProps[key]) { // 此时的元素一是以前\r\n      el.removeAttribute(key);\r\n    }\r\n  }\r\n\r\n\r\n  // 其他情况直接用新的值覆盖掉老的值即可\r\n  for (let key in newProps) {\r\n    if (key == 'style') {\r\n      for (let styleName in newProps.style) { // {color:red,background:green}\r\n        el.style[styleName] = newProps.style[styleName]\r\n      }\r\n      // 浏览器重新渲染也会看值是否变化\r\n    }\r\n    // event \r\n    else {\r\n      el.setAttribute(key, newProps[key]);\r\n    }\r\n  }\r\n}","import Watcher from './observer/watcher';\r\nimport { patch } from './vdom/patch';\r\n\r\nexport function lifeCycleMixin(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this\r\n    // 将虚拟节点 变成 真实节点 替换掉$el 后续 dom diff 也会执行此方法\r\n    vm.$el = patch(vm.$el, vnode)\r\n  }\r\n}\r\n\r\n//钩子函数是用数组存储的所以需要for\r\nexport function callHook(vm, hook) {\r\n  let handlers = vm.$options[hook]\r\n  if (handlers) {\r\n    for (let i = 0; i < handlers.length; i++) {\r\n      handlers[i].call(vm)  //生命周期 this 指向vm实例\r\n    }\r\n  }\r\n}\r\n\r\n//当挂载组件时需要用到次方法\r\nexport function mountComponent(vm, el) {\r\n  // Vue在渲染的过程中 会创建一个 所谓的“渲染watcher ” 只用来渲染的\r\n  // watcher就是一个回调 每次数据变化 就会重新执行watcher\r\n\r\n\r\n  // Vue是不是MVVM框架\r\n  callHook(vm, 'beforeMount')\r\n  const updateComponent = () => {\r\n    // 内部会调用刚才我们解析后的render方法 =》 vnode\r\n    // _render => options.render 方法\r\n    // _update => 将虚拟dom 变成真实dom 来执行\r\n    console.log('update')\r\n    vm._update(vm._render());\r\n  }\r\n\r\n  // 每次数据变化 就执行 updateComponent 方法 进行更新操作\r\n  new Watcher(vm, updateComponent, () => { }, true);\r\n\r\n  callHook(vm, 'mounted');\r\n  // vue 响应式数据的规则 数据变了 视图会刷新\r\n}","import { initState } from './state'\r\nimport { compileToFunctions } from './compiler/index.js'\r\nimport { mountComponent, callHook} from './lifecycle.js'\r\nimport { mergeOptions } from './utils'\r\nimport { nextTick } from './lifecycle.js'\r\n\r\n\r\nexport function initMixin (Vue) {\r\n  Vue.prototype._init = function(options) {\r\n    const vm = this\r\n\r\n    //合并options\r\n    vm.$options = mergeOptions(vm.constructor.options || {}, options)\r\n    \r\n    callHook(vm, 'beforeCreate')\r\n    initState(vm) //初始化状态\r\n    callHook(vm, 'created')\r\n\r\n    //在根节点渲染页面\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = vm.$el = document.querySelector(el)\r\n\r\n    //遵循源码 render > template > el 渲染机制\r\n    const opts = vm.$options;\r\n\r\n    if (!opts.render) {\r\n      let template = opts.template\r\n      if (!template && el) {\r\n        template = el.outerHTML\r\n        console.log(template);\r\n      }\r\n\r\n      const render = compileToFunctions(template)\r\n      opts.render = render\r\n      console.log(\"render\", render);\r\n    }\r\n    // 走到这用户传入是render函数不需编译 --initMixin初始化结束\r\n    mountComponent(vm); // 组件的挂载流程\r\n  }\r\n}","\r\n\r\nexport function createTextVNode(text) {\r\n  return vnode(undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\nexport function createElement(tag, data = {}, ...children) {\r\n  //vue 中的 key 不会作为属性传递给组件\r\n  return vnode(tag, data, data.key, children)\r\n}\r\n\r\nfunction vnode(tag, data, key, children, text) {\r\n  return {\r\n    tag,\r\n    data,\r\n    key,\r\n    children,\r\n    text\r\n  }\r\n}","import { createTextVNode, createElement } from './vdom/create-element'\r\n\r\n\r\nexport function renderMixin(Vue) {\r\n  Vue.prototype._v = function (text) {  //创建文本节点\r\n    return createTextVNode(text)\r\n  }\r\n  Vue.prototype._c = function () {      //创建标签节点\r\n    return createElement(...arguments)\r\n  }\r\n  Vue.prototype._s = function (val) {   // 判断当前这个值是不是对象 ，如果是对象 直接转换成字符串 ，防止页面出现[object Object]\r\n    return val == null ? '' : (typeof val === 'object') ? JSON.stringify(val) : val\r\n  }\r\n  Vue.prototype._render = function () { //字符串实现的render方法\r\n    const vm = this\r\n    const { render } = vm.$options\r\n    let vnode = render.call(vm)         //方法存在Vue原型上 this指向Vue _v _c  _s\r\n    return vnode\r\n  }\r\n}","// Vue.directive Vue.filter Vue.component\r\nimport { mergeOptions } from '../utils'\r\n\r\nexport function initGlobalAPI(Vue) { //全局api\r\n  Vue.options = {}\r\n\r\n  //公共方法 合并options\r\n  Vue.mixin = function (mixin) {\r\n    this.options = mergeOptions(this.options, mixin)\r\n  }\r\n}","import { initMixin } from './init'\r\nimport { renderMixin } from './render.js'\r\nimport { lifeCycleMixin } from './lifecycle.js'\r\nimport { initGlobalAPI } from './global-api/index.js'\r\nimport { nextTick } from './observer/scheduler'\r\n\r\nclass Vue {\r\n  constructor(options) {\r\n    this._init(options); // 初始化操作\r\n  }\r\n}\r\n\r\n\r\ninitMixin(Vue)\r\nrenderMixin(Vue)\r\nlifeCycleMixin(Vue)\r\n\r\n\r\ninitGlobalAPI(Vue)  // initGlobalApi 给构造函数来扩展全局的方法\r\nVue.prototype.$nextTick = nextTick\r\n\r\n\r\n// ----------------------diff测试----------------------------\r\n// diff 是比较两个树的差异 （虚拟dom）  把前后的dom节点渲染成虚拟dom，通过虚拟节点比对,找到差异，更新真实dom节点\r\n// import {compileToFunctions} from './compiler/index';\r\n// import {createElm,patch} from './vdom/patch'\r\n// let vm1 = new Vue({data:{name:'zf'}});\r\n// let vm2 = new Vue({data:{name:'jw'}});\r\n\r\n// let render1 = compileToFunctions(`<div>\r\n//     <li key=\"A\">A</li>\r\n//     <li key=\"B\">B</li>\r\n//     <li key=\"C\">C</li>\r\n//     <li key=\"D\">D</li>\r\n// </div>`);\r\n// let oldVnode = render1.call(vm1);\r\n\r\n// let realElement = createElm(oldVnode);\r\n// document.body.appendChild(realElement);\r\n\r\n\r\n// let render2 = compileToFunctions(`<div>\r\n//     <li key=\"C\">C</li>\r\n//     <li key=\"D\">D</li>\r\n//     <li key=\"M\">M</li>\r\n//     <li key=\"E\">E</li>\r\n// </div>`);\r\n// let newVnode = render2.call(vm2);\r\n// // 没有虚拟dom 和 diff算法时  直接重新渲染 强制重新更新页面（没有复用老的节点），\r\n// // diff 算法 而是先不对差异 在进行更新\r\n// setTimeout(() => {\r\n//   patch(oldVnode,newVnode); // 虚拟节点之间的比对\r\n// }, 1000);\r\n\r\n\r\nexport default Vue"],"names":["isObject","obj","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","forEach","hook","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","Object","assign","arrayProto","Array","prototype","arrayMethods","create","methods","method","ob","__ob__","args","result","apply","inserted","slice","observeArray","id","Dep","subs","target","addDep","watcher","push","update","pushTarget","popTarget","Observer","data","defineProperty","value","enumerable","configurable","isArray","__proto__","DataCue","walk","i","length","observe","keys","defineReactive","dep","get","depend","set","newValue","notify","initState","vm","opts","$options","props","initData","proxy","property","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","stack","textEnd","indexOf","startTageMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","end","advance","text","substring","chars","attr","name","element","createASTElement","pop","children","replace","type","n","tag","defaultTagRE","gen","node","generate","test","JSON","stringify","tokens","index","lastIndex","exec","trim","join","genChildren","el","map","c","genProps","str","split","item","undefined","code","compileToFunctions","template","ast","render","Function","has","queue","flushSchedulerQueue","run","queueWatcher","console","log","nextTick","callbacks","pending","flushCallbacksQueue","fn","setTimeout","Watcher","expoOrFn","cb","deps","depsId","Set","getter","add","addSub","patch","oldVnode","newVnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","replaceChild","textContent","updateProperties","oldChildren","newChildren","updateChildren","innerHTML","appendChild","isSameVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","moveIndex","moveVnode","ele","vnode","document","createElement","createTextNode","oldProps","newProps","newStyle","style","oldStyle","removeAttribute","styleName","setAttribute","lifeCycleMixin","Vue","_update","$el","callHook","handlers","mountComponent","updateComponent","_render","initMixin","_init","constructor","$mount","querySelector","outerHTML","createTextVNode","renderMixin","_v","_c","arguments","_s","val","initGlobalAPI","mixin","$nextTick"],"mappings":"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"}