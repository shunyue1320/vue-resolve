{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/dep.js","../src/observer/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// vue的工具方法\r\n\r\nexport function isObject(obj) {\r\n  return typeof obj === 'object' && obj !== null\r\n}\r\n\r\nconst LIFECYCLE_HOOKS = [\r\n  'beforeCreate',\r\n  'created',\r\n  'beforeMount',\r\n  'mounted',\r\n  'beforeUpdate',\r\n  'updated'\r\n]\r\n\r\nlet strats = {}\r\n/*** 钩子拼接 将同名钩子函数拼接成数组 ***/\r\nfunction mergeHook(parentVal, childVal) {\r\n  if (childVal) {     //子级有\r\n    if (parentVal) {  //父级有\r\n      return parentVal.concat(childVal) //同名生命周期数组\r\n    } else {\r\n      return [ childVal ]\r\n    }\r\n  } else {            //子级没有\r\n    return parentVal\r\n  }\r\n}\r\n\r\nLIFECYCLE_HOOKS.forEach(hook => {\r\n  strats[hook] = mergeHook\r\n})\r\n\r\n/*** 选项拼接 ***/\r\nexport function mergeOptions (parent, child) {\r\n  const options = {}  //合并存储容器\r\n\r\n  //父选项\r\n  for (let key in parent) {\r\n    mergeField(key)\r\n  }\r\n\r\n  //新增选项\r\n  for (let key in child) {\r\n    if (!parent.hasOwnProperty(key)) {\r\n      mergeField(key)\r\n    }\r\n  }\r\n\r\n  /*** 判断各选项类型 执行对应的合并逻辑 ***/\r\n  function mergeField (key) {\r\n    if (strats[key]) { //是钩子\r\n      options[key] = strats[key](parent[key], child[key])\r\n    } else if (isObject(parent[key]) && isObject(child[key])) { //是对象\r\n      options[key] = Object.assign(parent[key], child[key])\r\n    } else {           //是方法\r\n      if (child[key] == null) {\r\n        options[key] = parent[key];\r\n      } else {\r\n        options[key] = child[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return options\r\n}","//获取数组原型上的方法\r\nconst arrayProto = Array.prototype;\r\n//克隆一个原型方法\r\nexport const arrayMethods = Object.create(arrayProto);\r\n\r\n//7个改变数组的方法\r\nconst methods = [ 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse', 'splice' ]\r\n\r\n//封装7个改变数组的方法 原因：当改变数组数据时需要视图更新\r\nmethods.forEach(method => {\r\n  //在vue内执行改变数组的方法 其实就是执行以下的方法\r\n  arrayMethods[method] = function (...args) {\r\n    const ob = this.__ob__\r\n    const result = arrayProto[method].apply(this, args)\r\n\r\n    //给增加的新数据进行响应式\r\n    let inserted\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n      default:\r\n        break;\r\n    }\r\n    inserted && ob.observeArray(inserted)\r\n\r\n    // ob.dep.notify() //视图更新\r\n    \r\n    return result\r\n  }\r\n})","let id = 0\r\n\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++\r\n    this.subs = []\r\n  }\r\n\r\n  depend() {\r\n    // 1. 让dep 记住watcher\r\n    // 2. 让watcher 记住dep 双向记忆\r\n    Dep.target.addDep(this) //让wacher 存储 dep\r\n  }\r\n  addSub(watcher) {\r\n    this.subs.push(watcher)\r\n  }\r\n  notify() {\r\n    this.subs.forEach(watcher => watcher.update())\r\n  }\r\n}\r\n\r\nDep.target = null //默认为null\r\nconst stack = []  //先进后出\r\nexport function pushTarget(watcher) { //栈添加\r\n  Dep.target = watcher\r\n  //  stack.push(watcher) // []\r\n}\r\nexport function popTarget() {         //栈删除\r\n  Dep.target = null\r\n  //   stack.pop();\r\n  //   Dep.target = stack[stack.length-1];\r\n}\r\n\r\nexport default Dep\r\n\r\n","import { isObject } from \"../utils\";\r\nimport { arrayMethods } from './array'\r\nimport Dep from './dep.js';\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    //__ob__ 一个响应式标记 作用：将当前this'继承'给需响应的对象或数组\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,         //指向this\r\n      enumerable: false,   //不可枚举\r\n      configurable: false\r\n    })\r\n\r\n    //判断数组响应式\r\n    if (Array.isArray(data)) {\r\n      data.__proto__ = arrayMethods //替换封装的原型方法\r\n      this.observeArray(DataCue)\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n\r\n  observeArray(data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      observe(data[i])\r\n    }\r\n  }\r\n\r\n  walk(data) {\r\n    Object.keys(data).forEach(key => {\r\n      this.defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n\r\n  defineReactive(data, key, value) {\r\n    observe(value) //递归 所有数据响应式\r\n    let dep = new Dep //每个属性一个\r\n    Object.defineProperty(data, key, {\r\n      get() {\r\n        if (Dep.target) { //将Dep.target赋值后再调用get方法就可以给该属性添加一个wacher\r\n          dep.depend()    //添加watcher\r\n        }\r\n\r\n        return value\r\n      },\r\n      set(newValue) {\r\n        if (newValue === value) return\r\n        observe(newValue) //给新数据响应式\r\n        value = newValue\r\n\r\n        //视图更新\r\n        dep.notify()\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function observe(data) {\r\n  //不是对象或=null不监控\r\n  if (!isObject(data)) {\r\n    return\r\n  }\r\n\r\n  //对象已监控 则跳出\r\n  if (data.__ob__ instanceof Observer) {\r\n    return\r\n  }\r\n\r\n  return new Observer(data)\r\n}","import { observe } from './observer/index.js'\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n\r\n  //props属性\r\n  if (opts.props) {\r\n    initProps(vm)\r\n  }\r\n\r\n  //data数据\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n\r\n  // computed ... watch\r\n\r\n  //methods方法\r\n  if (opts.methods) {\r\n    initMethod(vm)\r\n  }\r\n}\r\n\r\nfunction initProps() {}\r\nfunction initMethod() {}\r\nfunction proxy(vm, property, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[property][key]\r\n    },\r\n    set(newValue) {\r\n      vm[property][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n  for (const key in data) {\r\n    proxy(vm, '_data', key) //数据代理至vm\r\n  }\r\n  observe(data)             //数据响应式\r\n}","// 字母a-zA-Z_ - . 数组小写字母 大写字母  \r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;          // 标签名\r\n// ?:匹配不捕获   <aaa:aaa>\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// startTagOpen 可以匹配到开始标签 正则捕获到的内容是 (标签名)\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);    // 标签开头的正则 捕获的内容是标签名\r\n// 闭合标签 </xxx>  \r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\n// <div aa=\"123\" bb=123  cc='123'\r\n// 捕获到的是 属性名 和 属性值 arguments[1] || arguments[2] || arguments[2]\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n// <div > | <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/;                      // 匹配标签结束的 >\r\n// 匹配动态变量的  +? 尽可能少匹配\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nexport function parseHTML(html) {\r\n  let root           //存储编译出来的ast树\r\n  let currentParent  //存储当前编译标签的父级标签\r\n  //借助栈型结构判断标签是否正常闭合<div>对应<div>\r\n  //执行过程中匹配到标签处理后push入stack 以此类推 例如：当push入一个</div>时上一个push的肯定是<div>如果不是则报错，如果是则将他们出栈 等待校验下一个push的标签\r\n  let stack = []\r\n\r\n  //结构树结构 html = <div id='app'><span>{{name}}</span></div>\r\n  while (html) {\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd == 0) {\r\n      const startTageMatch = parseStartTag() // { tagName: 'div', attrs: [] }\r\n      //开始标签\r\n      if (startTageMatch) {\r\n        start(startTageMatch.tagName, startTageMatch.attrs)\r\n      }\r\n      //结束标签\r\n      const endTagMatch = html.match(endTag) //[ \"</div>\", \"div\", index: 0 ]\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1])\r\n        advance(endTagMatch[0].length)\r\n      }\r\n    }\r\n\r\n    //如果不是0 说明是文本\r\n    let text\r\n    if (textEnd > 0) {\r\n      text = html.substring(0, textEnd) //截取标签前面的文本\r\n      chars(text)\r\n    }\r\n    if (text) {\r\n      advance(text.length)      //编译推进\r\n    }\r\n  }\r\n\r\n  //匹配该标签内的所有属性 return { tagName: 'div', attrs: [] }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen) // [\"<div\", \"div\", index: 0, ...]\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []    //属性\r\n      }\r\n      advance(start[0].length)  //编译推进 html => id='app'><span>{{name}}</span></div>\r\n      \r\n      let end, attr  // !匹配开头是> && 匹配属性  意思：匹配该标签内的所有属性\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        //attr => [ 0: \"id='app'\", 1: \"id\", 2: \"=\", 3: undefined, 4: \"app\", 5: undefined ]\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n        advance(attr[0].length) //编译推进\r\n      }\r\n      if (end) {\r\n        advance(end[0].length) //编译推进\r\n        return match\r\n      }\r\n    }\r\n  }\r\n\r\n  //开始标签 每次解析开始标签 都会执行此方法\r\n  function start(tagName, attrs) {\r\n    let element = createASTElement(tagName, attrs)\r\n    if (!root) {\r\n      root = element //只有第一次是根\r\n    }\r\n    currentParent = element\r\n    stack.push(element)\r\n  }\r\n\r\n  function end(tagName) {\r\n    let element = stack.pop()\r\n    currentParent = stack[stack.length - 1]\r\n    if (currentParent) {\r\n      element.parent = currentParent\r\n      currentParent.children.push(element)\r\n    }\r\n  }\r\n\r\n  //处理文本\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, '')\r\n    if (text) {\r\n      //加入currentParent的子元素内\r\n      currentParent.children.push({\r\n        type: 3,\r\n        text\r\n      })\r\n    }\r\n  }\r\n\r\n  //编译推进 将已编译完成的字符串去除\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n\r\n\r\n  // 常见数据结构 栈 队列 数组 链表 集合 hash表 树\r\n  function createASTElement(tagName, attrs) {\r\n    return {\r\n      tag: tagName,\r\n      attrs,\r\n      children: [],\r\n      parent: null,\r\n      type: 1        //1:元素  3:文本\r\n    }\r\n  }\r\n\r\n  return root\r\n}","import { parseHTML } from './parser.js'\r\n// import { generate } from './generator.js';\r\n\r\nexport function compileToFunctions(template) {\r\n  //1. 将outerHTML 转换成 ast树\r\n  let ast = parseHTML(template) // { tag: 'div', attrs, parent, type, children: [...] }\r\n\r\n  //2. ast树 => 拼接字符串\r\n  let code = generate(ast) //return _c('div',{id:app,style:{color:red}}, ...children)\r\n  code = `with(this{\\r\\nreturn ${code} \\r\\n})`\r\n\r\n  //3. 字符串 => 可执行方法\r\n  let render = new Function(code);\r\n  /**如下：\r\n  * render(){ \r\n  *   with(this){\r\n  *     return _c('div',{id:app,style:{color:red}},_c('span',undefined,_v(\"helloworld\"+_s(msg)) ))\r\n  *   }\r\n  * }\r\n  * \r\n  */\r\n\r\n  return render;\r\n  /**\r\n   * 编译原理的3个步骤：\r\n   * 1. outerHTML    => ast树\r\n   * 2. ast树        => render字符串\r\n   * 3. render字符串 => render方法\r\n   */\r\n}","// import Watcher from './observer/watcher';\r\n// import { patch } from './vdom/patch';\r\n\r\n//钩子函数是用数组存储的所以需要for\r\nexport function callHook(vm, hook) {\r\n  let handlers = vm.$options[hook]\r\n  if (handlers) {\r\n    for (let i = 0; i < handlers.length; i++) {\r\n      handlers[i].call(vm)  //生命周期 this 指向vm实例\r\n    }\r\n  }\r\n}","import { initState } from './state';\r\nimport { compileToFunctions } from './compiler/index.js';\r\nimport { mergeOptions } from './utils';\r\nimport { callHook } from './lifecycle.js'\r\n\r\n\r\nexport function initMixin (Vue) {\r\n  Vue.prototype._init = function(options) {\r\n    const vm = this\r\n\r\n    //合并options\r\n    vm.$options = mergeOptions(vm.constructor.options || {}, options)\r\n    \r\n    callHook(vm, 'beforeCreate')\r\n    initState(vm) //初始化状态\r\n    callHook(vm, 'created')\r\n\r\n    //在根节点渲染页面\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = vm.$el = document.querySelector(el)\r\n\r\n    //遵循源码 render > template > el 渲染机制\r\n    const opts = vm.$options;\r\n\r\n    if (!opts.render) {\r\n      let template = opts.template\r\n      if (!template && el) {\r\n        template = el.outerHTML\r\n        console.log(template);\r\n      }\r\n\r\n      const render = compileToFunctions(template)\r\n      opts.render = render\r\n      console.log(\"render\", render);\r\n    }\r\n    // 走到这用户传入是render函数不需编译\r\n    callHook(vm, 'beforeMount')\r\n  }\r\n}","import {initMixin} from './init'\r\n\r\nclass Vue {\r\n  constructor(options) {\r\n    this._init(options); // 初始化操作\r\n  }\r\n}\r\n\r\n\r\ninitMixin(Vue)\r\n\r\n\r\n\r\nexport default Vue"],"names":["isObject","obj","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","forEach","hook","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","Object","assign","arrayProto","Array","prototype","arrayMethods","create","methods","method","ob","__ob__","args","result","apply","inserted","slice","observeArray","id","Dep","subs","target","addDep","watcher","push","update","Observer","data","defineProperty","value","enumerable","configurable","isArray","__proto__","DataCue","walk","i","length","observe","keys","defineReactive","dep","get","depend","set","newValue","notify","initState","vm","opts","$options","props","initData","proxy","property","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","stack","textEnd","indexOf","startTageMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","end","advance","text","substring","chars","attr","name","element","createASTElement","pop","children","replace","type","n","tag","compileToFunctions","template","ast","code","generate","render","Function","callHook","handlers","initMixin","Vue","_init","constructor","el","$mount","$el","document","querySelector","outerHTML","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EAEO,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;EAC5B,SAAO,QAAOA,GAAP,MAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;EACD;EAED,IAAMC,eAAe,GAAG,CACtB,cADsB,EAEtB,SAFsB,EAGtB,aAHsB,EAItB,SAJsB,EAKtB,cALsB,EAMtB,SANsB,CAAxB;EASA,IAAIC,MAAM,GAAG,EAAb;EACA;;EACA,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,QAA9B,EAAwC;EACtC,MAAIA,QAAJ,EAAc;EAAM;EAClB,QAAID,SAAJ,EAAe;EAAG;EAChB,aAAOA,SAAS,CAACE,MAAV,CAAiBD,QAAjB,CAAP,CADa;EAEd,KAFD,MAEO;EACL,aAAO,CAAEA,QAAF,CAAP;EACD;EACF,GAND,MAMO;EAAa;EAClB,WAAOD,SAAP;EACD;EACF;;EAEDH,eAAe,CAACM,OAAhB,CAAwB,UAAAC,IAAI,EAAI;EAC9BN,EAAAA,MAAM,CAACM,IAAD,CAAN,GAAeL,SAAf;EACD,CAFD;EAIA;;EACO,SAASM,YAAT,CAAuBC,MAAvB,EAA+BC,KAA/B,EAAsC;EAC3C,MAAMC,OAAO,GAAG,EAAhB,CAD2C;EAG3C;;EACA,OAAK,IAAIC,GAAT,IAAgBH,MAAhB,EAAwB;EACtBI,IAAAA,UAAU,CAACD,GAAD,CAAV;EACD,GAN0C;;;EAS3C,OAAK,IAAIA,IAAT,IAAgBF,KAAhB,EAAuB;EACrB,QAAI,CAACD,MAAM,CAACK,cAAP,CAAsBF,IAAtB,CAAL,EAAiC;EAC/BC,MAAAA,UAAU,CAACD,IAAD,CAAV;EACD;EACF;EAED;;;EACA,WAASC,UAAT,CAAqBD,GAArB,EAA0B;EACxB,QAAIX,MAAM,CAACW,GAAD,CAAV,EAAiB;EAAE;EACjBD,MAAAA,OAAO,CAACC,GAAD,CAAP,GAAeX,MAAM,CAACW,GAAD,CAAN,CAAYH,MAAM,CAACG,GAAD,CAAlB,EAAyBF,KAAK,CAACE,GAAD,CAA9B,CAAf;EACD,KAFD,MAEO,IAAId,QAAQ,CAACW,MAAM,CAACG,GAAD,CAAP,CAAR,IAAyBd,QAAQ,CAACY,KAAK,CAACE,GAAD,CAAN,CAArC,EAAmD;EAAE;EAC1DD,MAAAA,OAAO,CAACC,GAAD,CAAP,GAAeG,MAAM,CAACC,MAAP,CAAcP,MAAM,CAACG,GAAD,CAApB,EAA2BF,KAAK,CAACE,GAAD,CAAhC,CAAf;EACD,KAFM,MAEA;EAAY;EACjB,UAAIF,KAAK,CAACE,GAAD,CAAL,IAAc,IAAlB,EAAwB;EACtBD,QAAAA,OAAO,CAACC,GAAD,CAAP,GAAeH,MAAM,CAACG,GAAD,CAArB;EACD,OAFD,MAEO;EACLD,QAAAA,OAAO,CAACC,GAAD,CAAP,GAAeF,KAAK,CAACE,GAAD,CAApB;EACD;EACF;EACF;;EAED,SAAOD,OAAP;EACD;;ECjED;EACA,IAAMM,UAAU,GAAGC,KAAK,CAACC,SAAzB;;EAEO,IAAMC,YAAY,GAAGL,MAAM,CAACM,MAAP,CAAcJ,UAAd,CAArB;;EAGP,IAAMK,OAAO,GAAG,CAAE,MAAF,EAAU,KAAV,EAAiB,OAAjB,EAA0B,SAA1B,EAAqC,MAArC,EAA6C,SAA7C,EAAwD,QAAxD,CAAhB;;EAGAA,OAAO,CAAChB,OAAR,CAAgB,UAAAiB,MAAM,EAAI;EACxB;EACAH,EAAAA,YAAY,CAACG,MAAD,CAAZ,GAAuB,YAAmB;EACxC,QAAMC,EAAE,GAAG,KAAKC,MAAhB;;EADwC,sCAANC,IAAM;EAANA,MAAAA,IAAM;EAAA;;EAExC,QAAMC,MAAM,GAAGV,UAAU,CAACM,MAAD,CAAV,CAAmBK,KAAnB,CAAyB,IAAzB,EAA+BF,IAA/B,CAAf,CAFwC;;EAKxC,QAAIG,QAAJ;;EACA,YAAQN,MAAR;EACE,WAAK,MAAL;EACA,WAAK,SAAL;EACEM,QAAAA,QAAQ,GAAGH,IAAX;EACA;;EACF,WAAK,QAAL;EACEG,QAAAA,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAX;EANJ;;EAUAD,IAAAA,QAAQ,IAAIL,EAAE,CAACO,YAAH,CAAgBF,QAAhB,CAAZ,CAhBwC;;EAoBxC,WAAOF,MAAP;EACD,GArBD;EAsBD,CAxBD;;ECTA,IAAIK,EAAE,GAAG,CAAT;;MAEMC;EACJ,iBAAc;EAAA;;EACZ,SAAKD,EAAL,GAAUA,EAAE,EAAZ;EACA,SAAKE,IAAL,GAAY,EAAZ;EACD;;;;+BAEQ;EACP;EACA;EACAD,MAAAA,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB,IAAlB,EAHO;EAIR;;;6BACMC,SAAS;EACd,WAAKH,IAAL,CAAUI,IAAV,CAAeD,OAAf;EACD;;;+BACQ;EACP,WAAKH,IAAL,CAAU5B,OAAV,CAAkB,UAAA+B,OAAO;EAAA,eAAIA,OAAO,CAACE,MAAR,EAAJ;EAAA,OAAzB;EACD;;;;;;EAGHN,GAAG,CAACE,MAAJ,GAAa,IAAb;;MCjBMK;EACJ,oBAAYC,IAAZ,EAAkB;EAAA;;EAChB;EACA1B,IAAAA,MAAM,CAAC2B,cAAP,CAAsBD,IAAtB,EAA4B,QAA5B,EAAsC;EACpCE,MAAAA,KAAK,EAAE,IAD6B;EACf;EACrBC,MAAAA,UAAU,EAAE,KAFwB;EAEf;EACrBC,MAAAA,YAAY,EAAE;EAHsB,KAAtC,EAFgB;;EAShB,QAAI3B,KAAK,CAAC4B,OAAN,CAAcL,IAAd,CAAJ,EAAyB;EACvBA,MAAAA,IAAI,CAACM,SAAL,GAAiB3B,YAAjB,CADuB;;EAEvB,WAAKW,YAAL,CAAkBiB,OAAlB;EACD,KAHD,MAGO;EACL,WAAKC,IAAL,CAAUR,IAAV;EACD;EACF;;;;mCAEYA,MAAM;EACjB,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACU,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EACpCE,QAAAA,OAAO,CAACX,IAAI,CAACS,CAAD,CAAL,CAAP;EACD;EACF;;;2BAEIT,MAAM;EAAA;;EACT1B,MAAAA,MAAM,CAACsC,IAAP,CAAYZ,IAAZ,EAAkBnC,OAAlB,CAA0B,UAAAM,GAAG,EAAI;EAC/B,QAAA,KAAI,CAAC0C,cAAL,CAAoBb,IAApB,EAA0B7B,GAA1B,EAA+B6B,IAAI,CAAC7B,GAAD,CAAnC;EACD,OAFD;EAGD;;;qCAEc6B,MAAM7B,KAAK+B,OAAO;EAC/BS,MAAAA,OAAO,CAACT,KAAD,CAAP,CAD+B;;EAE/B,UAAIY,GAAG,GAAG,IAAItB,GAAJ,EAAV,CAF+B;;EAG/BlB,MAAAA,MAAM,CAAC2B,cAAP,CAAsBD,IAAtB,EAA4B7B,GAA5B,EAAiC;EAC/B4C,QAAAA,GAD+B,iBACzB;EACJ,cAAIvB,GAAG,CAACE,MAAR,EAAgB;EAAE;EAChBoB,YAAAA,GAAG,CAACE,MAAJ,GADc;EAEf;;EAED,iBAAOd,KAAP;EACD,SAP8B;EAQ/Be,QAAAA,GAR+B,eAQ3BC,QAR2B,EAQjB;EACZ,cAAIA,QAAQ,KAAKhB,KAAjB,EAAwB;EACxBS,UAAAA,OAAO,CAACO,QAAD,CAAP,CAFY;;EAGZhB,UAAAA,KAAK,GAAGgB,QAAR,CAHY;;EAMZJ,UAAAA,GAAG,CAACK,MAAJ;EACD;EAf8B,OAAjC;EAiBD;;;;;;EAKI,SAASR,OAAT,CAAiBX,IAAjB,EAAuB;EAC5B;EACA,MAAI,CAAC3C,QAAQ,CAAC2C,IAAD,CAAb,EAAqB;EACnB;EACD,GAJ2B;;;EAO5B,MAAIA,IAAI,CAAChB,MAAL,YAAuBe,QAA3B,EAAqC;EACnC;EACD;;EAED,SAAO,IAAIA,QAAJ,CAAaC,IAAb,CAAP;EACD;;ECrEM,SAASoB,SAAT,CAAmBC,EAAnB,EAAuB;EAC5B,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB,CAD4B;;EAI5B,MAAID,IAAI,CAACE,KAAT,EAAgB,CAJY;;;EAS5B,MAAIF,IAAI,CAACtB,IAAT,EAAe;EACbyB,IAAAA,QAAQ,CAACJ,EAAD,CAAR;EACD,GAX2B;EAe5B;;;EACA,MAAIC,IAAI,CAACzC,OAAT,EAAkB;EAGnB;;EAID,SAAS6C,KAAT,CAAeL,EAAf,EAAmBM,QAAnB,EAA6BxD,GAA7B,EAAkC;EAChCG,EAAAA,MAAM,CAAC2B,cAAP,CAAsBoB,EAAtB,EAA0BlD,GAA1B,EAA+B;EAC7B4C,IAAAA,GAD6B,iBACvB;EACJ,aAAOM,EAAE,CAACM,QAAD,CAAF,CAAaxD,GAAb,CAAP;EACD,KAH4B;EAI7B8C,IAAAA,GAJ6B,eAIzBC,QAJyB,EAIf;EACZG,MAAAA,EAAE,CAACM,QAAD,CAAF,CAAaxD,GAAb,IAAoB+C,QAApB;EACD;EAN4B,GAA/B;EAQD;;EAED,SAASO,QAAT,CAAkBJ,EAAlB,EAAsB;EACpB,MAAIrB,IAAI,GAAGqB,EAAE,CAACE,QAAH,CAAYvB,IAAvB;EACAA,EAAAA,IAAI,GAAGqB,EAAE,CAACO,KAAH,GAAW,OAAO5B,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAAC6B,IAAL,CAAUR,EAAV,CAA7B,GAA6CrB,IAA/D;;EACA,OAAK,IAAM7B,GAAX,IAAkB6B,IAAlB,EAAwB;EACtB0B,IAAAA,KAAK,CAACL,EAAD,EAAK,OAAL,EAAclD,GAAd,CAAL,CADsB;EAEvB;;EACDwC,EAAAA,OAAO,CAACX,IAAD,CAAP,CANoB;EAOrB;;EC3CD;EACA,IAAM8B,MAAM,iCAAZ;EACA;;EACA,IAAMC,YAAY,iBAAUD,MAAV,kBAAwBA,MAAxB,MAAlB;;EAEA,IAAME,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,EAArB;EACA;;EACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,YAAf;EACA;EACA;;EACA,IAAMI,SAAS,GAAG,2EAAlB;EACA;;EACA,IAAMC,aAAa,GAAG,YAAtB;EAIO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EAC9B,MAAIC,IAAJ,CAD8B;;EAE9B,MAAIC,aAAJ,CAF8B;EAG9B;EACA;;EACA,MAAIC,KAAK,GAAG,EAAZ,CAL8B;;EAQ9B,SAAOH,IAAP,EAAa;EACX,QAAII,OAAO,GAAGJ,IAAI,CAACK,OAAL,CAAa,GAAb,CAAd;;EACA,QAAID,OAAO,IAAI,CAAf,EAAkB;EAChB,UAAME,cAAc,GAAGC,aAAa,EAApC,CADgB;EAEhB;;EACA,UAAID,cAAJ,EAAoB;EAClBE,QAAAA,KAAK,CAACF,cAAc,CAACG,OAAhB,EAAyBH,cAAc,CAACI,KAAxC,CAAL;EACD,OALe;;;EAOhB,UAAMC,WAAW,GAAGX,IAAI,CAACY,KAAL,CAAWhB,MAAX,CAApB,CAPgB;;EAQhB,UAAIe,WAAJ,EAAiB;EACfE,QAAAA,GAAG,CAACF,WAAW,CAAC,CAAD,CAAZ,CAAH;EACAG,QAAAA,OAAO,CAACH,WAAW,CAAC,CAAD,CAAX,CAAevC,MAAhB,CAAP;EACD;EACF,KAdU;;;EAiBX,QAAI2C,IAAI,SAAR;;EACA,QAAIX,OAAO,GAAG,CAAd,EAAiB;EACfW,MAAAA,IAAI,GAAGf,IAAI,CAACgB,SAAL,CAAe,CAAf,EAAkBZ,OAAlB,CAAP,CADe;;EAEfa,MAAAA,KAAK,CAACF,IAAD,CAAL;EACD;;EACD,QAAIA,IAAJ,EAAU;EACRD,MAAAA,OAAO,CAACC,IAAI,CAAC3C,MAAN,CAAP,CADQ;EAET;EACF,GAjC6B;;;EAoC9B,WAASmC,aAAT,GAAyB;EACvB,QAAMC,KAAK,GAAGR,IAAI,CAACY,KAAL,CAAWlB,YAAX,CAAd,CADuB;;EAEvB,QAAIc,KAAJ,EAAW;EACT,UAAMI,KAAK,GAAG;EACZH,QAAAA,OAAO,EAAED,KAAK,CAAC,CAAD,CADF;EAEZE,QAAAA,KAAK,EAAE,EAFK;;EAAA,OAAd;EAIAI,MAAAA,OAAO,CAACN,KAAK,CAAC,CAAD,CAAL,CAASpC,MAAV,CAAP,CALS;;EAOT,UAAIyC,IAAJ,EAASK,IAAT,CAPS;;;EAQT,aAAO,EAAEL,IAAG,GAAGb,IAAI,CAACY,KAAL,CAAWd,aAAX,CAAR,MAAuCoB,IAAI,GAAGlB,IAAI,CAACY,KAAL,CAAWf,SAAX,CAA9C,CAAP,EAA6E;EAC3E;EACAe,QAAAA,KAAK,CAACF,KAAN,CAAYnD,IAAZ,CAAiB;EAAE4D,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAZ;EAAiBtD,UAAAA,KAAK,EAAEsD,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD;EAAlD,SAAjB;EACAJ,QAAAA,OAAO,CAACI,IAAI,CAAC,CAAD,CAAJ,CAAQ9C,MAAT,CAAP,CAH2E;EAI5E;;EACD,UAAIyC,IAAJ,EAAS;EACPC,QAAAA,OAAO,CAACD,IAAG,CAAC,CAAD,CAAH,CAAOzC,MAAR,CAAP,CADO;;EAEP,eAAOwC,KAAP;EACD;EACF;EACF,GAxD6B;;;EA2D9B,WAASJ,KAAT,CAAeC,OAAf,EAAwBC,KAAxB,EAA+B;EAC7B,QAAIU,OAAO,GAAGC,gBAAgB,CAACZ,OAAD,EAAUC,KAAV,CAA9B;;EACA,QAAI,CAACT,IAAL,EAAW;EACTA,MAAAA,IAAI,GAAGmB,OAAP,CADS;EAEV;;EACDlB,IAAAA,aAAa,GAAGkB,OAAhB;EACAjB,IAAAA,KAAK,CAAC5C,IAAN,CAAW6D,OAAX;EACD;;EAED,WAASP,GAAT,CAAaJ,OAAb,EAAsB;EACpB,QAAIW,OAAO,GAAGjB,KAAK,CAACmB,GAAN,EAAd;EACApB,IAAAA,aAAa,GAAGC,KAAK,CAACA,KAAK,CAAC/B,MAAN,GAAe,CAAhB,CAArB;;EACA,QAAI8B,aAAJ,EAAmB;EACjBkB,MAAAA,OAAO,CAAC1F,MAAR,GAAiBwE,aAAjB;EACAA,MAAAA,aAAa,CAACqB,QAAd,CAAuBhE,IAAvB,CAA4B6D,OAA5B;EACD;EACF,GA3E6B;;;EA8E9B,WAASH,KAAT,CAAeF,IAAf,EAAqB;EACnBA,IAAAA,IAAI,GAAGA,IAAI,CAACS,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;;EACA,QAAIT,IAAJ,EAAU;EACR;EACAb,MAAAA,aAAa,CAACqB,QAAd,CAAuBhE,IAAvB,CAA4B;EAC1BkE,QAAAA,IAAI,EAAE,CADoB;EAE1BV,QAAAA,IAAI,EAAJA;EAF0B,OAA5B;EAID;EACF,GAvF6B;;;EA0F9B,WAASD,OAAT,CAAiBY,CAAjB,EAAoB;EAClB1B,IAAAA,IAAI,GAAGA,IAAI,CAACgB,SAAL,CAAeU,CAAf,CAAP;EACD,GA5F6B;;;EAgG9B,WAASL,gBAAT,CAA0BZ,OAA1B,EAAmCC,KAAnC,EAA0C;EACxC,WAAO;EACLiB,MAAAA,GAAG,EAAElB,OADA;EAELC,MAAAA,KAAK,EAALA,KAFK;EAGLa,MAAAA,QAAQ,EAAE,EAHL;EAIL7F,MAAAA,MAAM,EAAE,IAJH;EAKL+F,MAAAA,IAAI,EAAE,CALD;;EAAA,KAAP;EAOD;;EAED,SAAOxB,IAAP;EACD;;ECxHM,SAAS2B,kBAAT,CAA4BC,QAA5B,EAAsC;EAC3C;EACA,MAAIC,GAAG,GAAG/B,SAAS,CAAC8B,QAAD,CAAnB,CAF2C;EAI3C;;EACA,MAAIE,IAAI,GAAGC,QAAQ,CAACF,GAAD,CAAnB,CAL2C;;EAM3CC,EAAAA,IAAI,kCAA2BA,IAA3B,YAAJ,CAN2C;;EAS3C,MAAIE,MAAM,GAAG,IAAIC,QAAJ,CAAaH,IAAb,CAAb;EACA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,SAAOE,MAAP;EACA;EACF;EACA;EACA;EACA;EACA;EACC;;EC7BD;EACA;EAEA;EACO,SAASE,QAAT,CAAkBpD,EAAlB,EAAsBvD,IAAtB,EAA4B;EACjC,MAAI4G,QAAQ,GAAGrD,EAAE,CAACE,QAAH,CAAYzD,IAAZ,CAAf;;EACA,MAAI4G,QAAJ,EAAc;EACZ,SAAK,IAAIjE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiE,QAAQ,CAAChE,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;EACxCiE,MAAAA,QAAQ,CAACjE,CAAD,CAAR,CAAYoB,IAAZ,CAAiBR,EAAjB,EADwC;EAEzC;EACF;EACF;;ECLM,SAASsD,SAAT,CAAoBC,GAApB,EAAyB;EAC9BA,EAAAA,GAAG,CAAClG,SAAJ,CAAcmG,KAAd,GAAsB,UAAS3G,OAAT,EAAkB;EACtC,QAAMmD,EAAE,GAAG,IAAX,CADsC;;EAItCA,IAAAA,EAAE,CAACE,QAAH,GAAcxD,YAAY,CAACsD,EAAE,CAACyD,WAAH,CAAe5G,OAAf,IAA0B,EAA3B,EAA+BA,OAA/B,CAA1B;EAEAuG,IAAAA,QAAQ,CAACpD,EAAD,EAAK,cAAL,CAAR;EACAD,IAAAA,SAAS,CAACC,EAAD,CAAT,CAPsC;;EAQtCoD,IAAAA,QAAQ,CAACpD,EAAD,EAAK,SAAL,CAAR,CARsC;;EAWtC,QAAIA,EAAE,CAACE,QAAH,CAAYwD,EAAhB,EAAoB;EAClB1D,MAAAA,EAAE,CAAC2D,MAAH,CAAU3D,EAAE,CAACE,QAAH,CAAYwD,EAAtB;EACD;EACF,GAdD;;EAgBAH,EAAAA,GAAG,CAAClG,SAAJ,CAAcsG,MAAd,GAAuB,UAAUD,EAAV,EAAc;EACnC,QAAM1D,EAAE,GAAG,IAAX;EACA0D,IAAAA,EAAE,GAAG1D,EAAE,CAAC4D,GAAH,GAASC,QAAQ,CAACC,aAAT,CAAuBJ,EAAvB,CAAd,CAFmC;;EAKnC,QAAMzD,IAAI,GAAGD,EAAE,CAACE,QAAhB;;EAEA,QAAI,CAACD,IAAI,CAACiD,MAAV,EAAkB;EAChB,UAAIJ,QAAQ,GAAG7C,IAAI,CAAC6C,QAApB;;EACA,UAAI,CAACA,QAAD,IAAaY,EAAjB,EAAqB;EACnBZ,QAAAA,QAAQ,GAAGY,EAAE,CAACK,SAAd;EACAC,QAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;EACD;;EAED,UAAMI,MAAM,GAAGL,kBAAkB,CAACC,QAAD,CAAjC;EACA7C,MAAAA,IAAI,CAACiD,MAAL,GAAcA,MAAd;EACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBf,MAAtB;EACD,KAjBkC;;;EAmBnCE,IAAAA,QAAQ,CAACpD,EAAD,EAAK,aAAL,CAAR;EACD,GApBD;EAqBD;;MC1CKuD,MACJ,aAAY1G,OAAZ,EAAqB;EAAA;;EACnB,OAAK2G,KAAL,CAAW3G,OAAX,EADmB;;EAEpB;;EAIHyG,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}